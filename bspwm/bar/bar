#!/bin/bash

. $(dirname $0)/bar_config

### WORKSPACES ###

workspaces=""

# Get populated workspaces
for i in {0..9}; do
    windows=$(bspc query -N -d $i)

    if [ -n "$windows" ]; then
       workspaces=$workspaces$i
    fi
done

arch="%{F${color_white} B${color_head}} %{T2}${icon_arch} %{T1}%{F${color_head} B${color_head}}${sep_right}"
if (( ${#workspaces} == 0 )); then
    arch="%{F${color_white} B${color_head}} %{T2}${icon_arch} %{T1}%{F${color_head} B${color_light_grey}}${sep_right}"
fi

wsp_array=()
current_desktop=$(bspc query -D -d)

# For each character in $workspaces
for (( i=0; i<${#workspaces}; i++ )); do
    workspace=${workspaces:$i:1}
    workspace=$(expr $workspace + 1)

    misc="misc"

    if [ "$workspace" == "2" ]; then
        misc="web"
    elif [ "$workspace" == "3" ]; then
        misc="chat"
    elif [ "$workspace" == "4" ]; then
        misc="dev"
    elif [ "$workspace" == "9" ]; then
        misc="steam"
    fi

    color_select=${color_head}
    color_select_bg=${color_head}

    j=$((i+1))
    nextWorkspace=${workspaces:$j:1}

    # If this workspace is the current desktop, set active color
    if [ "$workspace" == "$(expr $current_desktop + 1)" ]; then
        color_select=${color_wsp}

        # If the current workspace is the first one, set background of Arch symbol
        if [ "$(expr $workspace - 1)" == "${workspaces:0:1}" ]; then
            arch="%{F${color_white} B${color_head}} %{T2}${icon_arch} %{T1}%{F${color_head} B${color_wsp}}${sep_right}"
        fi

    # Else if the workspace to the right is the current desktop, set active color as background
    # Additionally, check to make sure that workspace is a populated workspace
    elif [ "$current_desktop" == "$nextWorkspace" ] && [[ $workspaces == *"$current_desktop"* ]]; then
        color_select_bg=${color_wsp}
    fi

    # If the first and only workspace, add as a mix of wsp_first and wsp_last
    if [ "$workspace" == "1" ] && [ ${#workspaces} == "1" ]; then
        wsp_array+="%{F${color_white} B$color_select T1}1: term %{F$color_select B$color_light_grey}${sep_right}"

    # If the first workspace, add as wsp_first
    elif [ "$workspace" == "1" ]; then
        wsp_array+="%{F${color_white} B$color_select T1}1: term %{F$color_select B$color_select_bg}${sep_right}"

    # If last workspace, set it up as wsp_last
    elif [ "$i" == "$(expr ${#workspaces} - 1)" ]; then
        wsp_array+="%{F${color_white} B$color_select T1} $workspace: $misc %{F$color_select B${color_light_grey}}${sep_right}"

    # If in the middle, set up as wsp_mid
    else
        wsp_array+="%{F${color_white} B$color_select T1} $workspace: $misc %{F$color_select B$color_select_bg}${sep_right}"
    fi
done

# Blur background if focused workspace has open windows
if [[ $workspaces == *$current_desktop* ]]; then
    $HOME/.blur.sh > /dev/null 2>&1 &
else
    $HOME/.blur.sh -r > /dev/null 2>&1 &
fi

### TITLE ###

win="%{F${color_head} B$color_light_grey %{T2}${icon_window} %{T1}%{F${color_light_grey} B${color_back}}${sep_right}"

title="%{F${color_fore}}$(xtitle -t 50)"

### STATS ###

music="%{F${color_light_grey}}${sep_left}%{B${color_light_grey} F${color_grey}}%{A:./music.sh 15:}${sep_left}%{B${color_grey} F${color_fore}} ${icon_music} $(mpc current -f '[[%artist% - ]%title%]|[%file%]' 2>&1 | head -c 70)%{A}"

# TODO: Change this to actually update for incoming chat messages
chat="%{F${color_chat}}${sep_left}%{F${color_back} B${color_chat}} ${icon_chat} 1 ${sep_l_left} ${icon_contact} oui"

mail="%{F${color_grey}}${sep_left}%{B${color_grey} F${color_fore}} ${icon_mail} $(</tmp/unread_mail)"

cpu="$(</tmp/cpu)%%"
ram="$(free -m | awk 'NR == 2 {gsub(/%/,""); print $3}')M"
sys="%{F${color_light_grey}}${sep_left}%{B${color_light_grey} F${color_fore}} ${icon_cpu} $cpu ${sep_l_left} ${icon_mem} $ram"

rootFree="$(df / | awk '{ sum+=$5 } END { print sum }')%%"
#homeFree="$(df /home | awk '{ sum+=$5 } END { print sum }')%%"
disk="%{F${color_grey}}${sep_left}%{B${color_grey} F${color_icon}} ${icon_hdd}%{F${color_fore}} $rootFree"

# TODO: Change this to update volume icon
vol="$((pactl list sinks | grep -m2 "Volume: front-left:")| awk '{print $5}' | tail -n1)%"
vol="%{F${color_light_grey}}${sep_left}%{B${color_light_grey} F${color_icon}} ${icon_vol}%{F${color_fore}} $vol"

date=$(date +"%a %b %d")
time=$(date +"%I:%M %p")

date="%{F${color_grey}}${sep_left}%{B${color_grey} F${color_icon}} ${icon_calendar}%{F${color_fore}} $date"

time="%{F${color_head}}${sep_left}%{B${color_head} F${color_white}} ${icon_clock} $time"

batt="$(acpi --battery | cut -d, -f2 | cut -c2- | rev | cut -c 2- | rev)"
batt_icon="${icon_batt0}"

if (( batt < 20 )); then
    batt_icon="${icon_batt0}"
elif (( batt < 80 )); then
    batt_icon="${icon_batt1}"
elif (( batt >= 80 )); then
    batt_icon="${icon_batt2}"
fi

batt="%{F${color_grey}}${sep_left}%{B${color_grey} F${color_icon}} $batt_icon%{F${color_fore}} $batt%%"

wifi="$(iw dev wlp2s0 station dump | grep signal: | cut -d, -f1 | cut -c12-14)"
wifi_icon="${icon_wifi1}"

if (( wifi > -50 )); then
    wifi_icon="${icon_wifi2}"
elif (( wifi > -70 )); then
    wifi_icon="${icon_wifi1}"
else
    wifi_icon="${icon_wifi0}"
fi

wifi="$(iwgetid -r)"
wifi="%{F${color_light_grey}}${sep_left}%{B${color_light_grey} F${color_icon}} $wifi_icon%{F${color_fore}} $wifi"

echo -e %{l}$arch ${wsp_array[*]} $win $title %{r}$music $chat $mail $sys $disk $wifi $batt $vol $date $time %{B${color_back}}

